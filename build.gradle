buildscript {
	ext {
		grailsVersion = project.grailsVersion
	}
	repositories {
		mavenLocal()
		maven { url 'https://repo.grails.org/grails/core' }
		jcenter()
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:$grailsVersion"
		classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
    classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
    classpath 'org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.6'
    classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11'
		classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
	}
}

group = 'org.grails.plugins'
def versionTxt = file("${rootProject.projectDir}/version.txt")
version = versionTxt.exists() ? versionTxt.text.trim() : '0.1'

apply plugin: 'idea'
apply plugin: 'org.grails.grails-plugin'
apply plugin: 'org.grails.grails-plugin-publish'
apply plugin: 'org.asciidoctor.convert'
apply plugin: "com.jfrog.artifactory"

repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://repo.grails.org/grails/core' }
}

sourceCompatibility = targetCompatibility = 1.8

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	// provided "javax.servlet:javax.servlet-api:$javaxServletApiVersion"
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	compile "org.springframework.boot:spring-boot-starter-logging"
	compile "org.springframework.boot:spring-boot-autoconfigure"
	provided 'org.grails:grails-core'
	compileOnly "io.micronaut:micronaut-inject-groovy"
	console "org.grails:grails-console"
	profile "org.grails.profiles:plugin"
	testCompile "org.grails:grails-gorm-testing-support"
	testCompile "org.mockito:mockito-core"

	compile 'org.hibernate:hibernate-tools:5.4.0.Final', {
		['ant', 'common', 'freemarker', 'org.eclipse.jdt.core', 'runtime', 'text'].each { exclude module: it }
	}

	compile 'org.freemarker:freemarker:2.3.30'

	compile 'org.hibernate:hibernate-core:5.4.18.Final'
}


bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always',
        '-noverify',
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false

apply from: "${project.projectDir}/gradle/grailsPublish.gradle"
apply from: "${project.projectDir}/gradle/artifactoryPublish.gradle"
apply from: "${project.projectDir}/gradle/docs.gradle"
apply from: "${project.projectDir}/gradle/cleanBuild.gradle"
apply from: "${project.projectDir}/gradle/testVerbose.gradle"


